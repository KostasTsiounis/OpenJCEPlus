/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation */

#ifndef _Included_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
#define _Included_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
#ifdef __cplusplus
extern "C" {
#endif
#undef com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_osslDynamicallyLoaded
#define com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_osslDynamicallyLoaded 1L
/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    getLibraryBuildDate
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_getLibraryBuildDate
  (JNIEnv *, jclass);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    initializeOSSL
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_initializeOSSL
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CTX_getValue
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CTX_1getValue
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    getByteBufferPointer
 * Signature: (Ljava/nio/ByteBuffer;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_getByteBufferPointer
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RAND_nextBytes
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RAND_1nextBytes
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RAND_setSeed
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RAND_1setSeed
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RAND_generateSeed
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RAND_1generateSeed
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    EXTRAND_create
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_EXTRAND_1create
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    EXTRAND_nextBytes
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_EXTRAND_1nextBytes
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    EXTRAND_setSeed
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_EXTRAND_1setSeed
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    EXTRAND_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_EXTRAND_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_create
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1create
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_init
 * Signature: (JII[B[B)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1init
  (JNIEnv *, jclass, jlong, jint, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_clean
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1clean
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_setPadding
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1setPadding
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_getBlockSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1getBlockSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_getKeyLength
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1getKeyLength
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_getIVLength
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1getIVLength
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_getOID
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1getOID
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_encryptUpdate
 * Signature: (J[BII[BIZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1encryptUpdate
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_decryptUpdate
 * Signature: (J[BII[BIZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1decryptUpdate
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_encryptFinal
 * Signature: (J[BII[BIZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1encryptFinal
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_decryptFinal
 * Signature: (J[BII[BIZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1decryptFinal
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    checkHardwareSupport
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_checkHardwareSupport
  (JNIEnv *, jclass);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    CIPHER_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_CIPHER_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    z_kmc_native
 * Signature: ([BI[BIJII)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_z_1kmc_1native
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jint, jlong, jint, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_create
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1create
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_init
 * Signature: (JI[B[B)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1init
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_clean
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1clean
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_setPadding
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1setPadding
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_getBlockSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1getBlockSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_getKeyLength
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1getKeyLength
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_getIVLength
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1getIVLength
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_getOID
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1getOID
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_encryptUpdate
 * Signature: (J[BII[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1encryptUpdate
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_decryptUpdate
 * Signature: (J[BII[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1decryptUpdate
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_encryptFinal
 * Signature: (J[BII[BI[B)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1encryptFinal
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_decryptFinal
 * Signature: (J[BII[BI[B)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1decryptFinal
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    POLY1305CIPHER_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_POLY1305CIPHER_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_checkHardwareGCMSupport
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1checkHardwareGCMSupport
  (JNIEnv *, jclass);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_encryptFastJNI_WithHardwareSupport
 * Signature: (IIIIIIIJ[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1encryptFastJNI_1WithHardwareSupport
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jlong, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_encryptFastJNI
 * Signature: (JIIIIIIIJJJ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1encryptFastJNI
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint, jint, jint, jlong, jlong, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_decryptFastJNI_WithHardwareSupport
 * Signature: (IIIIIIIJ[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1decryptFastJNI_1WithHardwareSupport
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jlong, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_decryptFastJNI
 * Signature: (JIIIIIIIJJJ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1decryptFastJNI
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint, jint, jint, jlong, jlong, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_encrypt
 * Signature: (J[BI[BI[BII[BI[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1encrypt
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_decrypt
 * Signature: (J[BI[BI[BII[BI[BII)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1decrypt
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jint, jbyteArray, jint, jbyteArray, jint, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_FinalForUpdateEncrypt
 * Signature: (J[BI[BI[BII[BI[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1FinalForUpdateEncrypt
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_FinalForUpdateDecrypt
 * Signature: (J[BII[BII[BII)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1FinalForUpdateDecrypt
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_UpdForUpdateEncrypt
 * Signature: (J[BII[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1UpdForUpdateEncrypt
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_UpdForUpdateDecrypt
 * Signature: (J[BII[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1UpdForUpdateDecrypt
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_InitForUpdateEncrypt
 * Signature: (J[BI[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1InitForUpdateEncrypt
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_InitForUpdateDecrypt
 * Signature: (J[BI[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1InitForUpdateDecrypt
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_GCM_delete
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1GCM_1delete
  (JNIEnv *, jclass);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    free_GCM_ctx
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_free_1GCM_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    create_GCM_context
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_create_1GCM_1context
  (JNIEnv *, jclass);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_CCM_checkHardwareCCMSupport
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1CCM_1checkHardwareCCMSupport
  (JNIEnv *, jclass);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_CCM_encryptFastJNI_WithHardwareSupport
 * Signature: (IIIIIIIJ[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1CCM_1encryptFastJNI_1WithHardwareSupport
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jlong, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_CCM_encryptFastJNI
 * Signature: (IIIIIIJJJ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1CCM_1encryptFastJNI
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jlong, jlong, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_CCM_decryptFastJNI_WithHardwareSupport
 * Signature: (IIIIIIIJ[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1CCM_1decryptFastJNI_1WithHardwareSupport
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jlong, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_CCM_decryptFastJNI
 * Signature: (IIIIIIJJJ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1CCM_1decryptFastJNI
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jlong, jlong, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_CCM_encrypt
 * Signature: ([BI[BI[BI[BI[BII)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1CCM_1encrypt
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_CCM_decrypt
 * Signature: ([BI[BI[BI[BI[BII)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1CCM_1decrypt
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    do_CCM_delete
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_do_1CCM_1delete
  (JNIEnv *, jclass);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSACIPHER_public_encrypt
 * Signature: (JI[BII[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSACIPHER_1public_1encrypt
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSACIPHER_private_encrypt
 * Signature: (JI[BII[BIZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSACIPHER_1private_1encrypt
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jint, jint, jbyteArray, jint, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSACIPHER_public_decrypt
 * Signature: (JI[BII[BI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSACIPHER_1public_1decrypt
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSACIPHER_private_decrypt
 * Signature: (JI[BII[BIZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSACIPHER_1private_1decrypt
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jint, jint, jbyteArray, jint, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_generate
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1generate__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_generateParameters
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1generateParameters
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_generate
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1generate___3B
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_createPrivateKey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1createPrivateKey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_createPublicKey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1createPublicKey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_getParameters
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1getParameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_getPrivateKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1getPrivateKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_getPublicKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1getPublicKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_createPKey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1createPKey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_computeDHSecret
 * Signature: (JJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1computeDHSecret
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DHKEY_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DHKEY_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAKEY_generate
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAKEY_1generate
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAKEY_createPrivateKey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAKEY_1createPrivateKey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAKEY_createPublicKey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAKEY_1createPublicKey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAKEY_getPrivateKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAKEY_1getPrivateKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAKEY_getPublicKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAKEY_1getPublicKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAKEY_createPKey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAKEY_1createPKey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAKEY_size
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAKEY_1size
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAKEY_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAKEY_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_generate
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1generate__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_generateParameters
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1generateParameters
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_generate
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1generate___3B
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_createPrivateKey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1createPrivateKey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_createPublicKey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1createPublicKey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_getParameters
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1getParameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_getPrivateKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1getPrivateKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_getPublicKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1getPublicKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_createPKey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1createPKey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSAKEY_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSAKEY_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    PKEY_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_PKEY_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_create
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1create
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_update
 * Signature: (J[BII)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1update
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_updateFastJNI
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1updateFastJNI
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_digest
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1digest
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_digest_and_reset
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1digest_1and_1reset__JJI
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_digest_and_reset
 * Signature: (J[B)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1digest_1and_1reset__J_3B
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_size
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1size
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_reset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1reset
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DIGEST_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DIGEST_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    SIGNATURE_sign
 * Signature: (JJZ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_SIGNATURE_1sign
  (JNIEnv *, jclass, jlong, jlong, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    SIGNATURE_verify
 * Signature: (JJ[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_SIGNATURE_1verify
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    SIGNATUREEdDSA_signOneShot
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_SIGNATUREEdDSA_1signOneShot
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    SIGNATUREEdDSA_verifyOneShot
 * Signature: (J[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_SIGNATUREEdDSA_1verifyOneShot
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_signInit
 * Signature: (JJIZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1signInit
  (JNIEnv *, jclass, jlong, jlong, jint, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_verifyInit
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1verifyInit
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_getSigLen
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1getSigLen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_signFinal
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1signFinal
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_verifyFinal
 * Signature: (J[BI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1verifyFinal
  (JNIEnv *, jclass, jlong, jbyteArray, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_createContext
 * Signature: (Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1createContext
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_releaseContext
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1releaseContext
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_digestUpdate
 * Signature: (J[BII)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1digestUpdate
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_reset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1reset
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSAPSS_resetDigest
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSAPSS_1resetDigest
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSANONE_SIGNATURE_sign
 * Signature: ([BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSANONE_1SIGNATURE_1sign
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    DSANONE_SIGNATURE_verify
 * Signature: ([BJ[B)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_DSANONE_1SIGNATURE_1verify
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSASSL_SIGNATURE_sign
 * Signature: ([BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSASSL_1SIGNATURE_1sign
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    RSASSL_SIGNATURE_verify
 * Signature: ([BJ[BZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_RSASSL_1SIGNATURE_1verify
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HMAC_create
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HMAC_1create
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HMAC_update
 * Signature: (J[BI[BIIZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HMAC_1update
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jbyteArray, jint, jint, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HMAC_doFinal
 * Signature: (J[BI[BZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HMAC_1doFinal
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jbyteArray, jboolean);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HMAC_size
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HMAC_1size
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HMAC_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HMAC_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_generate
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1generate__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_generate
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1generate__Ljava_lang_String_2
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    XECKEY_generate
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_XECKEY_1generate
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_generateParameters
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1generateParameters__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_generateParameters
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1generateParameters__Ljava_lang_String_2
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_generate
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1generate___3B
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_createPrivateKey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1createPrivateKey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    XECKEY_createPrivateKey
 * Signature: ([BJ)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_XECKEY_1createPrivateKey
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_createPublicKey
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1createPublicKey
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    XECKEY_createPublicKey
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_XECKEY_1createPublicKey
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_getParameters
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1getParameters
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_getPrivateKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1getPrivateKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    XECKEY_getPrivateKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_XECKEY_1getPrivateKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_getPublicKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1getPublicKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    XECKEY_getPublicKeyBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_XECKEY_1getPublicKeyBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_createPKey
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1createPKey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    XECKEY_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_XECKEY_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    XDHKeyAgreement_init
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_XDHKeyAgreement_1init
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    XDHKeyAgreement_setPeer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_XDHKeyAgreement_1setPeer
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_computeECDHSecret
 * Signature: (JJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1computeECDHSecret
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    XECKEY_computeECDHSecret
 * Signature: (JJJI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_XECKEY_1computeECDHSecret
  (JNIEnv *, jclass, jlong, jlong, jlong, jint);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_signDatawithECDSA
 * Signature: ([BIJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1signDatawithECDSA
  (JNIEnv *, jclass, jbyteArray, jint, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    ECKEY_verifyDatawithECDSA
 * Signature: ([BI[BIJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_ECKEY_1verifyDatawithECDSA
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jint, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HKDF_create
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HKDF_1create
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HKDF_extract
 * Signature: (J[BJ[BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HKDF_1extract
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HKDF_expand
 * Signature: (J[BJ[BJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HKDF_1expand
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HKDF_derive
 * Signature: (J[BJ[BJ[BJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HKDF_1derive
  (JNIEnv *, jclass, jlong, jbyteArray, jlong, jbyteArray, jlong, jbyteArray, jlong, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HKDF_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HKDF_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    HKDF_size
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_HKDF_1size
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation
 * Method:    PBKDF2_derive
 * Signature: (Ljava/lang/String;[B[BII)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_crypto_plus_provider_ossl_NativeOSSLImplementation_PBKDF2_1derive
  (JNIEnv *, jclass, jstring, jbyteArray, jbyteArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
